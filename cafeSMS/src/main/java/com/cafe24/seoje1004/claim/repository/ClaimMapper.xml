<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cafe24.seoje1004.claim.repository.ClaimMapper">
	
	
	<!-- Claim객체등록 -->
	<resultMap type="com.cafe24.seoje1004.claim.model.Claim" id="claimListMap">
		<id property="claimCode" column="claim_code"/>
		<result property="claimType" column="claim_type"/>
		<result property="claimAskDate" column="claim_ask_date"/>
		<result property="claimContent" column="claim_content"/>
		<result property="claimAnswerDate" column="claim_answer_date"/>
		<result property="claimAnswerContent" column="claim_answer_content"/>
		<result property="subCode" column="sub_code"/>
		<result property="customerName" column="customer_name"/>
		<result property="customerPhone" column="customer_phone"/>
		<result property="claimStatus" column="claim_status"/>
	</resultMap>
	
	<!-- ClaimFile객체등록 -->
	<resultMap type="com.cafe24.seoje1004.claim.model.ClaimFile" id="claimFileListMap">
		<id property="claimFileCode" column="claim_file_code"/>
		<result property="claimCode" column="claim_code"/>
		<result property="claimFile" column="claim_file"/>
		<result property="fileName" column="file_name"/>
		<result property="randomName" column="random_name"/>
	</resultMap>
	
	<!-- 본사가 전체클래임리스트 조회 -->
	<select id="headViewClaimList"
			parameterType="java.util.Map"
			resultMap="claimListMap">
		SELECT
			claim_code,
			claim_type,
			claim_ask_date,
			claim_content,
			claim_answer_date,
			claim_answer_content,
			sub_code,
			customer_name,
			customer_phone,
			claim_status
		FROM
			claim
		<where>
			<if test="claimSearch.regitDateStart != null and claimSearch.regitDateEnd != null and claimSearch.regitDateStart !='' and claimSearch.regitDateEnd !=''">
				<![CDATA[date(claim_ask_date) >= #{claimSearch.regitDateStart} and date(claim_ask_date) <= #{claimSearch.regitDateEnd}]]>
			</if>
			<if test="claimSearch.searchKey != null and claimSearch.searchKey != '' and claimSearch.searchClaim != null and claimSearch.searchClaim != ''">
				AND  ${claimSearch.searchKey} like CONCAT('%',#{claimSearch.searchClaim},'%')
			</if> 
		</where> 
		<trim prefix="ORDER BY">
			<if test="claimSearch.criteria == null or claimSearch.criteria == ''">
				claim_ask_date
			</if>
			<if test="claimSearch.criteria != null or claimSearch.criteria != ''">
				${claimSearch.criteria} ${claimSearch.upDown}
			</if>
		</trim>
	</select>
	
	
	<!-- claimCode에 해당하는 클래임 상세정보출력 -->
	<select id="viewClaimContent"
			parameterType="String"
			resultMap="claimListMap">
		SELECT
			claim_code,
			claim_type,
			claim_ask_date,
			claim_content,
			claim_answer_date,
			claim_answer_content,
			sub_code,
			customer_name,
			customer_phone,
			claim_status
		FROM
			claim
		WHERE
			claim_code = #{claimCode}
		
	</select>
	
	<!-- 해당클래임의 파일리스트 -->
	<select id="viewClaimFile"
			parameterType="String"
			resultMap="claimFileListMap">
		SELECT
			claim_file_code,
			claim_code,
			claim_file,
			file_name,
			random_name
		FROM
			claim_file
		WHERE
			claim_code = #{claimCode}
	</select>
	
	
	<!-- 고객이 자신의 클래임을 조회 -->
	<select id="customerViewClaimList"
				parameterType="java.util.Map"
				resultMap="claimListMap">
		SELECT
			claim_code,
			claim_type,
			claim_ask_date,
			claim_content,
			claim_answer_date,
			claim_answer_content,
			sub_code,
			customer_name,
			customer_phone,
			claim_status
		FROM
			claim
		<where>
			customer_name = #{claim.customerName} AND customer_phone = #{claim.customerPhone}
			<if test="claimSearch.regitDateStart != null and claimSearch.regitDateEnd != null and claimSearch.regitDateStart !='' and claimSearch.regitDateEnd !=''">
				AND <![CDATA[date(claim_ask_date) >= #{claimSearch.regitDateStart} and date(claim_ask_date) <= #{claimSearch.regitDateEnd}]]>
			</if>
			<if test="claimSearch.searchKey != null and claimSearch.searchKey != '' and claimSearch.searchClaim != null and claimSearch.searchClaim != ''">
				AND  ${claimSearch.searchKey} like CONCAT('%',#{claimSearch.searchClaim},'%')
			</if> 
		</where> 
		<trim prefix="ORDER BY">
			<if test="claimSearch.criteria == null or claimSearch.criteria == ''">
				claim_ask_date
			</if>
			<if test="claimSearch.criteria != null or claimSearch.criteria != ''">
				${claimSearch.criteria} ${claimSearch.upDown}
			</if>
		</trim>
	</select>
	
	<!-- 고객이 클래임 등록을 처리 -->
	<insert id="customerAddClaim"  
			parameterType="com.cafe24.seoje1004.claim.model.Claim">
			<selectKey resultType="hashmap" keyProperty="claimCode" order="BEFORE">
			select if(isnull(claim_code),'claim_code1', concat('claim_code',MAX(CONVERT(SUBSTRING(claim_code,11), UNSIGNED))+1))
			as claimCode
			from claim
			</selectKey>
			INSERT INTO claim
				(claim_code
				,claim_type
				,claim_ask_date
				,claim_content
				,sub_code
				,customer_name
				,customer_phone
				)
				
				VALUES(
				#{claimCode}
				,#{claimType}
				,NOW()
				,#{claimContent}
				,#{subCode}
				,#{customerName}
				,#{customerPhone}
				)
	
	</insert>
	
	<!-- 랜덤네임이 중복되는 이름이 있으면 다시 새로운 랜덤네임으로 저장 -->
	<select id="selectClaimFileByRandomName"
			parameterType="String"
			resultMap="claimFileListMap">
		SELECT
			claim_code,
			file_name
		FROM
			claim_file
		WHERE
			random_name = #{randomName}	
	</select>
	
	<!-- 고객이 클래임 파일을 등록 -->
	<insert id="customerAddClaimFile"
			parameterType="com.cafe24.seoje1004.claim.model.ClaimFile">
			<selectKey resultType="hashmap" keyProperty="claimFileCode" order="BEFORE">
				select if(isnull(claim_file_code),'claim_file_code1', concat('claim_file_code',MAX(CONVERT(SUBSTRING(claim_file_code,16), UNSIGNED))+1))
				as claimFileCode
				from claim_file
			</selectKey>
			INSERT INTO claim_file
			(claim_file_code
			,claim_code
			,claim_file
			,file_name
			,random_name
			)
			VALUES
			(#{claimFileCode}
			,#{claimCode}
			,#{claimFile}
			,#{fileName}
			,#{randomName}
			)
		
	
	</insert>

</mapper>