<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cafe24.seoje1004.returns.repository.ReturnsMapper">
	
	<!-- returns객체등록 -->
	<resultMap type="com.cafe24.seoje1004.returns.model.Returns" id="returnsListMap">
		<id property="returnCode" column="return_code"/>
		<result property="returnReason" column="return_reason"/>
		<result property="returnPrice" column="return_price"/>
		<result property="returnReportDate" column="return_report_date"/>
		<result property="returnHeadCheck" column="return_head_check"/>
		<result property="returnHeadCheckDate" column="return_head_check_date"/>
		<result property="totalAccountGroup" column="total_account_group"/>
		<result property="returnReDelivery" column="return_re_delivery"/>
		<result property="returnCancel" column="return_cancel"/>
		<result property="ordersCode" column="orders_code"/>
		<result property="specificItemCode" column="specific_item_code"/>
		<result property="headStaffId" column="head_staff_id"/>
		<result property="headReturnsConfirm" column="head_returns_confirm"/>
		<result property="subCode" column="sub_code"/>
		
	</resultMap>
	
	<!-- returnsFile객체등록 -->
	<resultMap type="com.cafe24.seoje1004.returns.model.ReturnsFile" id="returnsFileListMap">
		<id property="returnFileCode" column="return_file_code"/>
		<result property="returnCode" column="return_code"/>
		<result property="returnFile" column="return_file"/>
		<result property="fileName" column="file_name"/>
		<result property="randomName" column="random_name"/>
	</resultMap>
	
	<!-- SubStock 객체 등록 -->
	<resultMap type="com.cafe24.seoje1004.returns.model.SubStock" id="subStockListMap">
		<id property="subStockCode" column="sub_stock_code"/>
		<result property="headStockInDate" column="head_stock_in_date"/>
		<result property="subStockInDate" column="sub_stock_in_date"/>
		<result property="subStockOut" column="sub_stock_out"/>
		<result property="subStockConfirmDate" column="sub_stock_confirm_date"/>
		<result property="ordersCode" column="orders_code"/>
		<result property="subCode" column="sub_code"/>
		<result property="headItemCode" column="head_item_code"/>
		<result property="specificItemCode" column="specific_item_code"/>
		<result property="subStaffCode" column="sub_staff_code"/>
	</resultMap>
	
	
	<!-- 가맹측 반품상품관리 조회 -->
	<select id="subViewReturnsList"
			parameterType="java.util.Map"
			resultMap="returnsListMap">
		SELECT
			return_code,
			return_reason,
			return_price,
			return_report_date,
			return_head_check,
			return_head_check_date,
			total_account_group,
			return_re_delivery,
			return_cancel,
			orders_code,
			specific_item_code,
			head_staff_id,
			head_returns_confirm,
			sub_code
		FROM
			returns	
		
				
		<where>
			sub_code	=	#{subCode}
			<if test="returnsSearch.regitDateStart != null and returnsSearch.regitDateEnd != null and returnsSearch.regitDateStart !='' and returnsSearch.regitDateEnd !=''">
				AND <![CDATA[date(return_report_date) >= #{returnsSearch.regitDateStart} and date(return_report_date) <= #{returnsSearch.regitDateEnd}]]>
			</if>
			<if test="returnsSearch.searchKey != null and returnsSearch.searchKey != '' and returnsSearch.searchReturns != null and returnsSearch.searchReturns != ''">
				AND  ${returnsSearch.searchKey} like CONCAT('%',#{returnsSearch.searchReturns},'%')
			</if> 
		</where> 
		<trim prefix="ORDER BY">
			<if test="returnsSearch.criteria == null or returnsSearch.criteria == ''">
				return_report_date
			</if>
			<if test="returnsSearch.criteria != null or returnsSearch.criteria != ''">
				${returnsSearch.criteria} ${returnsSearch.upDown}
			</if>
		</trim>	
				
	
	</select>
	
	<!-- 본사측 반품상품관리 조회 -->
	<select id="headViewReturnsList"
			parameterType="java.util.Map"
			resultMap="returnsListMap">
		SELECT
			return_code,
			return_reason,
			return_price,
			return_report_date,
			return_head_check,
			return_head_check_date,
			total_account_group,
			return_re_delivery,
			return_cancel,
			orders_code,
			specific_item_code,
			head_staff_id,
			head_returns_confirm,
			sub_code
		FROM
			returns			
		<where>
			<if test="returnsSearch.regitDateStart != null and returnsSearch.regitDateEnd != null and returnsSearch.regitDateStart !='' and returnsSearch.regitDateEnd !=''">
				<![CDATA[date(return_report_date) >= #{returnsSearch.regitDateStart} and date(return_report_date) <= #{returnsSearch.regitDateEnd}]]>
			</if>
			<if test="returnsSearch.searchKey != null and returnsSearch.searchKey != '' and returnsSearch.searchReturns != null and returnsSearch.searchReturns != ''">
				AND  ${returnsSearch.searchKey} like CONCAT('%',#{returnsSearch.searchReturns},'%')
			</if> 
		</where> 
		<trim prefix="ORDER BY">
			<if test="returnsSearch.criteria == null or returnsSearch.criteria == ''">
				return_report_date
			</if>
			<if test="returnsSearch.criteria != null or returnsSearch.criteria != ''">
				${returnsSearch.criteria} ${returnsSearch.upDown}
			</if>
		</trim>	
	</select>
	
	<!-- 해당 반품상품의 상세정보 -->
	<select id="viewReturnsContent"
			parameterType="String"
			resultMap="returnsListMap">
		SELECT
			return_code,
			return_reason,
			return_price,
			return_report_date,
			return_head_check,
			return_head_check_date,
			total_account_group,
			return_re_delivery,
			return_cancel,
			orders_code,
			specific_item_code,
			head_staff_id,
			head_returns_confirm,
			sub_code
		FROM
			returns	
		WHERE
			return_code = #{returnCode}	
	
	</select>
	
	<!-- 해당반품상품의 파일 리스트 -->
	<select id="viewReturnsFile"
			parameterType="String"
			resultMap="returnsFileListMap">
		SELECT
			return_file_code,
			return_code,
			return_file,
			file_name,
			random_name
		FROM
			returns_file
		WHERE
			return_code = #{returnCode}
	</select>
	
	<!-- 출고상태가 N, 가맹이확인하고 입고한날짜 not null -->
	<select id="subAddReturnsForm"
			parameterType="java.util.Map"
			resultMap="subStockListMap">
		SELECT
			sub_stock_code,
			head_stock_in_date,
			sub_stock_in_date,
			sub_stock_out,
			sub_stock_confirm_date,
			orders_code,
			sub_code,
			head_item_code,
			specific_item_code,
			sub_staff_code
		FROM
			sub_stock
		 
		<where>
			sub_code	=	#{subCode} AND 	sub_stock_out	=	"N" AND  sub_stock_in_date != ""
			<if test="subStockSearch.regitDateStart != null and subStockSearch.regitDateEnd != null and subStockSearch.regitDateStart !='' and subStockSearch.regitDateEnd !=''">
				AND <![CDATA[date(head_stock_in_date) >= #{subStockSearch.regitDateStart} and date(head_stock_in_date) <= #{subStockSearch.regitDateEnd}]]>
			</if>
			<if test="subStockSearch.searchKey != null and subStockSearch.searchKey != '' and subStockSearch.searchSubStock != null and subStockSearch.searchSubStock != ''">
				AND  ${subStockSearch.searchKey} like CONCAT('%',#{subStockSearch.searchSubStock},'%')
			</if> 
		</where> 
		<trim prefix="ORDER BY">
			<if test="subStockSearch.criteria == null or subStockSearch.criteria == ''">
				head_stock_in_date
			</if>
			<if test="subStockSearch.criteria != null or subStockSearch.criteria != ''">
				${subStockSearch.criteria} ${subStockSearch.upDown}
			</if>
		</trim>			
	</select>
	
	<!-- 해당재고를 기준으로 반품등록에 필요한 정보를 가져오자 -->
	<select id="subAddReturnsForm2"
			parameterType="String"
			resultType="com.cafe24.seoje1004.returns.model.AddReturns">
		SELECT
			sub_stock.sub_stock_code as subStockCode,
			head_item.h_item_selling_price as hItemSellingPrice,
			sub_orders.total_account_group as totalAccountGroup,
			sub_stock.orders_code as ordersCode,
			sub_stock.specific_item_code as specificItemCode,
			sub_stock.sub_code as subCode
				
		FROM	
			sub_stock
		INNER JOIN
			head_item 
		ON 
			sub_stock.head_item_code = head_item.h_item_code
		INNER JOIN
			sub_orders
		ON	
			sub_stock.orders_code = sub_orders.orders_code	
		WHERE
			sub_stock.sub_stock_code = #{subStockCode}
	</select>
	
	<!-- 환불 신청시 해당 재고상품의 출고여부(판매여부)를 N->Y로 변경 -->
	<update id="updateSubStockOut"
			parameterType="String">
		UPDATE
			sub_stock
		SET
			sub_stock_out	=	"Y"
		WHERE
			sub_stock_code = #{subStockCode}		
	
	</update>
	
	<!-- returns테이블에 새로운 환불 등록 -->
	<insert id="subAddReturns"
			parameterType="com.cafe24.seoje1004.returns.model.Returns">
		<selectKey resultType="hashmap" keyProperty="returnCode" order="BEFORE">
			select if(isnull(return_code),'return_code1', concat('return_code',MAX(CONVERT(SUBSTRING(return_code,12), UNSIGNED))+1))
			as returnCode
			from returns
		</selectKey>
		INSERT INTO returns
			(return_code
			,return_reason
			,return_price
			,return_report_date
			,total_account_group
			,orders_code
			,specific_item_code
			,sub_code
			)
			
			VALUES(
			#{returnCode}
			,#{returnReason}
			,#{returnPrice}
			,NOW()
			,#{totalAccountGroup}
			,#{ordersCode}
			,#{specificItemCode}
			,#{subCode}
			)
	</insert>
	
	<!-- 랜덤네임이 중복되는 이름이 있으면 다시 새로운 랜덤네임으로 저장 -->
	<select id="selectReturnFileByRandomName"
			parameterType="String"
			resultMap="returnsFileListMap">
		SELECT
			return_code,
			file_name
		FROM
			returns_file
		WHERE
			random_name = #{randomName}		
	
	</select>
	
	<!-- 반품첨부파일 정보 등록 -->
	<insert id="subAddReturnsFile"
			parameterType="com.cafe24.seoje1004.returns.model.ReturnsFile">
		<selectKey resultType="hashmap" keyProperty="returnFileCode" order="BEFORE">
			select if(isnull(return_file_code),'return_file_code1', concat('return_file_code',MAX(CONVERT(SUBSTRING(return_file_code,17), UNSIGNED))+1))
			as returnFileCode
			from returns_file
		</selectKey>
		INSERT INTO returns_file
		(return_file_code
		,return_code
		,return_file
		,file_name
		,random_name
		)
		VALUES
		(#{returnFileCode}
		,#{returnCode}
		,#{returnFile}
		,#{fileName}
		,#{randomName}
		)	
	
	</insert>
	
</mapper>