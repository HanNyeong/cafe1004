<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cafe24.seoje1004.orders.repository.OrdersMapper">
<resultMap type="com.cafe24.seoje1004.orders.model.Orders" id="ordersResultMap">
	<id property="ordersCode" column="orders_code"/>
	<result property="subOrdersGroup" column="sub_orders_group"/>
	<result property="subOrdersQuantity" column="sub_orders_quantity"/>
	<result property="subOrdersDate" column="sub_orders_date"/>
	<result property="subOrdersHeadCheck" column="sub_orders_head_check"/>
	<result property="subOrdersStatus" column="sub_orders_status"/>
	<result property="totalAccountGroup" column="total_account_group"/>
	<result property="ordersPay" column="orders_pay"/>
	<result property="ordersPayDate" column="orders_pay_date"/>
	<result property="headItemCode" column="head_item_code"/>
	<result property="subCode" column="sub_code"/>
	<result property="subStaffCode" column="sub_staff_code"/>
	<result property="headStaffId" column="head_staff_id"/>
	<result property="headOrdersConfirm" column="head_orders_confirm"/>
	<result property="subOrdersPrice" column="sub_orders_price"/>
</resultMap>

<!-- 장바구니에서 체크된 cartList 정보확인 select -->
	<select id="viewOrdersInCart"
			parameterType="java.util.Map"
			resultType="com.cafe24.seoje1004.cart.model.CartDetail">
	select
		c.h_item_code hItemCode,
		c.cart_code cartCode,
		c.cart_quantity cartQuantity,
		c.sub_code subCode,
		h.h_item_name hItemName,
		h.h_item_selling_price hItemSellingPrice
	from	
		cart c inner join head_item h
	on
		h.h_item_code = c.h_item_code
	where
		cart_code = #{cartCode}
	</select>
<!-- 주문내역 List select -->
	<select id="viewOrdersList"
			parameterType="java.util.Map"
			resultMap="ordersResultMap">
		select
			orders_code,
			sub_orders_group,
			sub_orders_quantity,
			sub_orders_date,
			sub_orders_head_check,
			sub_orders_status,
			total_account_group,
			orders_pay,
			orders_pay_date,
			head_item_code,
			sub_code,
			sub_staff_code,
			head_staff_id,
			head_orders_confirm,
			sub_orders_price
		from
			sub_orders
		<where>
			sub_code = #{subLogin.subCode}
		<if test="ordersSearch.regitDateStart != null and ordersSearch.regitDateEnd != null and ordersSearch.regitDateStart !='' and ordersSearch.regitDateEnd !=''">
			AND <![CDATA[date(sub_orders_date) >= #{ordersSearch.regitDateStart} and date(sub_orders_date) <= #{ordersSearch.regitDateEnd}]]>
		</if>
	</where>
		<if test="ordersSearch.criteria == null and ordersSearch.upDown == null">
			order by sub_orders_date desc
		</if>
		<if test="ordersSearch.criteria != null and ordersSearch.upDown != null and ordersSearch.criteria != null and ordersSearch.upDown != ''">
			order by ${ordersSearch.criteria} ${ordersSearch.upDown}
		</if>
		LIMIT 0,${ordersSearch.viewMore}
	</select>
	
	<!--addOrdersForTransaction Start  -->
	<!--ordersAddBySelectSpecific -->
	<!-- <select id="selectSpecificAddOrders"
			parameterType="java.util.Map"
			resultType="com.cafe24.seoje1004.cart.model.CartDetail">
		select
			specific_item_code	
		from
			specific_item
		where
			head_item_code = #{cartDetail.hItemCode}
		LIMIT(0,${cartDetail.cartQuantity})
			order by asc;
	</select> -->
	<!-- ordersAddByDelCart -->
	<delete id="delCartForAddOrders"
			parameterType="java.util.Map">
		DELETE 
		FROM 
			cart 
		WHERE 
			cart_code = #{cartDetail.cartCode}
	</delete>
	<!-- ordersAddByAddDelivery -->
	<insert id="addDeliveryForAddOrders"
			parameterType="java.util.Map">
		<selectKey resultType="hashmap" keyProperty="deliveryCode" order="BEFORE">
			select if(isnull(delivery_code),'delivery_code1000', concat('delivery_code', MAX(CONVERT(SUBSTRING(delivery_code,14), UNSIGNED))+1)) as deliveryCode
			from delivery
		</selectKey>
		insert into
			delivery
			(
			delivery_code,
			delivery_date,
			orders_code
			)
		values
			(
			#{deliveryCode},
			now(),
			#{orders.ordersCode}
			)
	</insert>
	<select id="selectOrdersCode"
		resultType="java.lang.String">
		select if(isnull(orders_code),'orders_code1000', concat('orders_code', MAX(CONVERT(SUBSTRING(orders_code,12), UNSIGNED))+1)) as ordersCode
		from sub_orders
	</select>
	<!-- ordersAdd -->
	<insert id="addOrders"
			parameterType="java.util.Map">
			<selectKey resultType="hashmap" keyProperty="ordersCode" order="BEFORE">
			select if(isnull(orders_code),'orders_code1000', concat('orders_code', MAX(CONVERT(SUBSTRING(orders_code,12), UNSIGNED))+1)) as ordersCode
			from sub_orders
			</selectKey>
		insert into
			sub_orders
				(
				orders_code, 
				sub_orders_group, 
				sub_orders_quantity, 
				sub_orders_date,
				total_account_group,
				head_item_code,
				sub_code,
				sub_staff_code,
				sub_orders_price
				)
			values
				(
				#{ordersCode},
				#{orders.subOrdersGroup},
				${cartDetail.cartQuantity},
				now(),
				#{orders.totalAccountGroup},
				#{cartDetail.hItemCode},
				#{orders.subCode},
				#{orders.subStaffCode},
				#{orders.subOrdersPrice}
				)
	</insert>
	<!-- addOrdersForTransaction End -->
	<select id="selectOrdersGroupCode"
		resultType="java.lang.String">
			select if(isnull(sub_orders_group),'sub_orders_group1', concat('sub_orders_group',MAX(CONVERT(SUBSTRING(sub_orders_group,17), UNSIGNED))+1))
			from sub_orders
	</select>
	
	<!-- 결제유무 update 쿼리 -->
	<update id="updateOrdersPay"
			parameterType="java.util.Map">
	UPDATE
		sub_orders
	SET
		sub_orders_status=#{orders.subOrdersStatus},
		orders_pay=#{orders.ordersPay},
		orders_pay_date=NOW()
	WHERE 
		orders_code = #{orders.ordersCode}
	</update>
	<delete id="subDeleteOrdersCancel"
			parameterType="com.cafe24.seoje1004.orders.model.Orders">
		DELETE FROM sub_orders 
		WHERE orders_code = #{ordersCode}
	</delete>
	
	<select id="viewOrdersListByHead"
			resultMap="ordersResultMap">
		SELECT 
			orders_code, 
			sub_orders_group, 
			sub_orders_quantity, 
			sub_orders_date, 
			sub_orders_head_check,
		 	sub_orders_status, 
		 	total_account_group, 
		 	orders_pay, 
		 	orders_pay_date, 
		 	head_item_code, 
		 	sub_code, 
		 	sub_staff_code, 
		 	head_staff_id, 
		 	head_orders_confirm,
		 	sub_orders_price
		FROM sub_orders
		<if test="ordersSearch.regitDateStart != null and ordersSearch.regitDateEnd != null and ordersSearch.regitDateStart !='' and ordersSearch.regitDateEnd !=''">
			AND <![CDATA[date(sub_orders_date) >= #{ordersSearch.regitDateStart} and date(sub_orders_date) <= #{ordersSearch.regitDateEnd}]]>
		</if>
		<if test="ordersSearch.criteria == null and ordersSearch.upDown == null">
			order by sub_orders_date desc
		</if>
		<if test="ordersSearch.criteria != null and ordersSearch.upDown != null and ordersSearch.criteria != null and ordersSearch.upDown != ''">
			order by ${ordersSearch.criteria} ${ordersSearch.upDown}
		</if>
		LIMIT 0,${ordersSearch.viewMore}
	</select>
	
	<update id="modifyOrdersConfirm"
			parameterType="java.util.Map">
			UPDATE sub_orders
			SET
				sub_orders_head_check = NOW(),
				head_orders_confirm = #{orders.headOrdersConfirm},
				head_staff_id = #{orders.headStaffId},
				sub_orders_status = #{orders.subOrdersStatus}
			WHERE 
				orders_code = #{orders.ordersCode}
	</update>
	
	<update id="modifyDeliveryLocation"
			parameterType="java.util.Map">
			UPDATE delivery
			SET
				delivery_location = #{delivery.deliveryLocation},
				delivery_person = #{delivery.deliveryPerson}
			WHERE orders_code = #{orders.ordersCode}
	</update>
	
	<insert id="addSubStock"
			parameterType="java.util.Map">
			<selectKey resultType="hashmap" keyProperty="subStockCode" order="BEFORE">
				select if(isnull(sub_stock_code),'sub_stock_code1000', concat('sub_stock_code', MAX(CONVERT(SUBSTRING(sub_stock_code,15), UNSIGNED))+1)) as subStockCode
				from sub_stock
			</selectKey>
	INSERT INTO 
		sub_stock(
			sub_stock_code,
			head_stock_in_date,  
			orders_code, 
			sub_code, 
			head_item_code, 
			specific_item_code)
	VALUES (
			#{subStockCode}, 
			NOW(),
			#{orders.ordersCode}, 
			#{orders.subCode}, 
			#{orders.headItemCode}, 
			#{specificItemCode}
			)
			
	</insert>
	<select id="selectSpecificCode"
			parameterType="com.cafe24.seoje1004.orders.model.Orders"
			resultType="java.lang.String">
			select 
				specific_item_code 
			from 
				specific_item 
			where 
				head_item_code = #{headItemCode} 
			and NOW() >= specific_item_expiry_date  
			and specific_item_out = 'N'
	</select>
	
	<!-- modifySpecific -->
	<update id="modifySpecific"
			parameterType="java.lang.String">
			UPDATE specific_item
			SET
				specific_item_out='Y'
			WHERE 
				specific_item_code = #{specificItemCode}
	</update>

	<!-- addSubAccount -->
	<insert id="addSubAccount"
			parameterType="java.util.Map">
		<selectKey resultType="hashmap" keyProperty="subAccountCode" order="BEFORE">
				select if(isnull(sub_account_code),'sub_account_code200', concat('sub_account_code', MAX(CONVERT(SUBSTRING(sub_account_code,17), UNSIGNED))+1)) as subAccountCode
				from sub_account
		</selectKey>
		INSERT INTO 
			sub_account
			(
			sub_account_code, 
			sub_account_flow, 
			total_account_group, 
			sub_account_price, 
			sub_account_request_date, 
			sub_account_detail, 
			subject_code, 
			sub_code
			)
			VALUES 
			(
			#{subAccountCode}, 
			#{subAccount.subAccountFlow}, 
			#{subAccount.totalAccountGroup}, 
			${subAccount.subAccountPrice}, 
			NOW(),
			#{subAccount.subAccountDetail}, 
			#{subAccount.subjectCode}, 
			#{subAccount.subCode}
			)
	</insert>
</mapper>