<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cafe24.seoje1004.subClient.repository.ClientMapper">
	<resultMap type="com.cafe24.seoje1004.subClient.model.Client" id="subClientResultMap">
      <id property="subClientCode" column="sub_client_code"/>
      <result property="subClientName" column="sub_client_name"/>    
      <result property="subClientRegitDate" column="sub_client_regit_date"/>
      <result property="subClientInCharge" column="sub_client_in_charge"/>
      <result property="subClientContract" column="sub_client_contract"/>
      <result property="subClientPhone" column="sub_client_phone"/>
      <result property="subClientAddr" column="sub_client_addr"/>
      <result property="subCode" column="sub_code"/>
      <result property="totalAccountGroup" column="total_account_group"/>
   </resultMap>   
   
   <select id="viewSubClient"
   		resultMap="subClientResultMap"
   		parameterType="java.util.Map">
	select
		sub_client_code,
		sub_client_name,
		sub_client_regit_date,
		sub_client_in_charge,
		sub_client_contract,
		sub_client_phone,
		sub_client_addr,
		total_account_group,
		sub_code
	from
		sub_client
	<where>
		sub_code = #{subLogin.subCode}
		<if test="clientSearch.regitDateStart != null and clientSearch.regitDateEnd != null and clientSearch.regitDateStart !='' and clientSearch.regitDateEnd !=''">
			AND <![CDATA[date(sub_client_regit_date) >= #{clientSearch.regitDateStart} and date(sub_client_regit_date) <= #{clientSearch.regitDateEnd}]]>
		</if>
		<if test="clientSearch.searchKey != null and clientSearch.searchKey != '' and clientSearch.search!= null and clientSearch.search != ''">
					AND  ${clientSearch.searchKey} like CONCAT('%',#{clientSearch.search},'%') 
		</if>
	</where>
		<if test="clientSearch.criteria == null and clientSearch.upDown == null">
			order by sub_client_regit_date desc
		</if>
		<if test="clientSearch.criteria != null and clientSearch.upDown != null and clientSearch.criteria != null and clientSearch.upDown != ''">
			order by ${clientSearch.criteria} ${clientSearch.upDown}
		</if>
	LIMIT 0,${clientSearch.viewMore} 
		
   </select>
   
   <!-- 수정폼이동 및 지출내역폼 이동시 가져갈 data-->
   <select id="selectSubClient"
   		resultMap="subClientResultMap">
	select
		sub_client_code,
		sub_client_name,
		sub_client_regit_date,
		sub_client_in_charge,
		sub_client_contract,
		sub_client_phone,
		sub_client_addr,
		total_account_group,
		sub_code
	from
		sub_client
	where
		sub_client_code = #{subClientCode}
   </select>

   
   <insert id="insertClient"
   		parameterType="java.util.Map">
   		<selectKey resultType="hashmap" keyProperty="subClientCode,totalAccountGroup" order="BEFORE">
        	select 
        	if(isnull(sub_client_code),'sub_client_code1000', concat('sub_client_code', MAX(CONVERT(SUBSTRING(sub_client_code,16), UNSIGNED))+1)) as subClientCode,
        	if(isnull(total_account_group),'client_total_account1', concat('client_total_account', MAX(CONVERT(SUBSTRING(total_account_group,21), UNSIGNED))+1)) as totalAccountGroup
        	from sub_client
      	</selectKey>
      		INSERT INTO 
      			sub_client (
					sub_client_code, 
					sub_client_name, 
					sub_client_regit_date, 
					sub_client_in_charge, 
					sub_client_phone, 
					sub_client_addr, 
					sub_code,
					total_account_group
					)
				VALUES (
					#{client.subClientCode},
		 			#{client.subClientName}, 
					 NOW(), 
		 			#{client.subClientInCharge},
		 			#{client.subClientPhone},
		 			#{client.subClientAddr},
		 			#{subLogin.subCode}
		 			#{totalAccountGroup}
		 			)
   </insert>
   
   
   <update id="modifyClient"
   		parameterType="java.util.Map">
   		UPDATE
   			sub_client
		SET
			sub_client_name= #{client.subClientName},
			sub_client_in_charge= #{client.subClientInCharge},
			sub_client_phone= #{client.subClientPhone},
			sub_client_addr= #{client.subClientAddr}
		WHERE
			sub_client_code= #{subClientCode}
   </update>
   
   	<select id="selectClientCode"
		resultType="java.lang.String">
		select if(isnull(sub_client_code),'sub_client_code1000', concat('sub_client_code', MAX(CONVERT(SUBSTRING(sub_client_code,16), UNSIGNED))+1)) as subClientCode
		from sub_client
	</select>
	
	<!-- addSubAccount -->
	<insert id="addSubAccount"
			parameterType="java.util.Map">
		<selectKey resultType="hashmap" keyProperty="subAccountCode" order="BEFORE">
			select if(isnull(sub_account_code),'sub_account_code300', concat('sub_account_code', MAX(CONVERT(SUBSTRING(sub_account_code,17), UNSIGNED))+1)) as subAccountCode
			from sub_account
		</selectKey>
		INSERT INTO 
			sub_account
				(
				sub_account_code,
				sub_account_flow, 
				total_account_group, 
				sub_account_price, 
				sub_account_request_date, 
				sub_account_detail, 
				subject_code, 
				sub_client_code, 
				sub_code
				)
		VALUES 
				(
				#{subAccountCode},
				#{subAccount.subAccountFlow}, 
				#{subAccount.totalAccountGroup}, 
				${subAccount.subAccountPrice}, 
				NOW(), 
				#{subAccount.subAccountDetail}, 
				#{subAccount.subjectCode}, 
				#{subAccount.subClientCode}, 
				#{subAccount.subCode}
				)
	</insert>
</mapper>